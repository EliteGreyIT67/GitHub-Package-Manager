# Python code obfuscated by www.development-tools.net 
 

import base64, codecs
magic = 'import os
import random
import sys
import time

import User.UserProfile


def GUI():
    import os
    import sys
    import tkinter as tk
    from tkinter import messagebox
    global directories
    directories = []
    import User
    cwd = User.UserProfile.SourceDirectory

    os.system('''osascript -e 'tell application "Terminal" to set visible of window 1 to false' ''')

    def Installer(value):
        import os

        import User.UserProfile
        os.chdir(User.UserProfile.SourceDirectory)
        cwd = User.UserProfile.SourceDirectory
        dir = f'{cwd}System/Cache/System/GitHub/Downloads'
        os.chdir(dir)
        Download_Source = value
        print('[!] CheckPoint 1|4 [!]')

        Files = []
        for path in os.listdir(cwd):
            # check if current path is a file
            if os.path.isfile(os.path.join(cwd, path)):
                Files.append(path)

        SDir = list(filter(os.path.isdir, os.listdir(os.curdir)))

        try:  # downloading from GitHub
            os.system(f"git clone '{Download_Source}'")

            print('[!] CheckPoint 2|4 [!]')
            import System.Drive.Errors_Events.EventMan as EV

            EV.NewEvent(event=f'Downloaded from Github', Pol=0)
            Files1 = []
            for path in os.listdir(cwd):
                # check if current path is a file
                if os.path.isfile(os.path.join(cwd, path)):
                    Files1.append(path)

            SDir1 = list(filter(os.path.isdir, os.listdir(os.curdir)))

            for x in Files1:
                if x in Files:
                    pass
                else:
                    import System.Drive.Errors_Events.EventMan as EV
                    EV.NewEvent(event=f'Package Downloaded: {x}', Pol=0)

            for y in SDir1:
                if y in SDir:
                    pass
                else:
                    print('[!] CheckPoint 3|4 [!]')
                    dir1 = f'{cwd}System/Cache/System/GitHub/Downloads/{y}'

                    ChangeDir = dir1

                    Files0 = ['Complex Installation']
                    for path in os.listdir(dir1):
                        # check if current path is a file
                        if os.path.isfile(os.path.join(dir1, path)):
                            Files0.append(path)

                    import tkinter as tk

                    def button_click(item):
                        root.destroy()
                        fi = Files0.index(item)
                        print(fi)

                        if fi == 0:

                            def complexgather():

                                import tkinter as tk

                                def on_submit():
                                    root.destroy()
                                    field1 = field1_value.get()
                                    field2 = field2_value.get()
                                    field3 = field3_value.get()
                                    field4 = field4_value.get()
                                    field5 = field5_value.get()
                                    field6 = field6_value.get()
                                    print("Field 1:", field1)
                                    print("Field 2:", field2)
                                    print("Field 3:", field3)
                                    print("Field 4:", field4)
                                    print("Field 5:", field5)
                                    print("Field 6:", field6)

                                    tool = f'{field3_value}\n{dir1}\n{field4_value}\n{field5_value}\n{field6_value}'

                                    try:
                                        os.system(field2)
                                        os.system(field3)
                                    except:
                                        messagebox.showinfo("Error",
                                                            "Project Was Downloaded But Requirements or Permissions Not Installed")
                                    ComplexLcaunch = open(f'{cwd}System/Cache/System/GitHub/Complex', 'a')
                                    ComplexLcaunch.write(f'\n{dir1}${field1_value}')
                                    Complexinstall = open(f'{cwd}System/Cache/System/GitHub/Complex_install', 'a')
                                    Complexinstall.write(tool)
                                    ComplexLcaunch.close()

                                    messagebox.showinfo("Success", "Successful Install")
                                    print('Fully installed!')

                                root = tk.Tk()
                                root.title("Complex Installation")

                                field1_value = tk.StringVar()
                                field2_value = tk.StringVar()
                                field3_value = tk.StringVar()
                                field4_value = tk.StringVar()
                                field5_value = tk.StringVar()
                                field6_value = tk.StringVar()

                                field1_label = tk.Label(root, text="*required Launch Command (ie. bash ./exe.sh")
                                field1 = tk.Entry(root, textvariable=field1_value)
                                field1_label.pack()
                                field1.pack()

                                field2_label = tk.Label(root, text="Requirements Command (ie. pip install /)")
                                field2 = tk.Entry(root, textvariable=field2_value)
                                field2_label.pack()
                                field2.pack()

                                field3_label = tk.Label(root, text="Privileges Command (ie. chmod -x)")
                                field3 = tk.Entry(root, textvariable=field3_value)
                                field3_label.pack()
                                field3.pack()

                                field4_label = tk.Label(root, text="*required Install Operation 1")
                                field4 = tk.Entry(root, textvariable=field4_value)
                                field4_label.pack()
                                field4.pack()

                                field5_label = tk.Label(root, text="Install Operation")
                                field5 = tk.Entry(root, textvariable=field5_value)
                                field5_label.pack()
                                field5.pack()

                                field6_label = tk.Label(root, text="Install Operation")
                                field6 = tk.Entry(root, textvariable=field6_value)
                                field6_label.pack()
                                field6.pack()

                                submit_button = tk.Button(root, text="Submit", command=on_submit)
                                submit_button.pack()

                                root.mainloop()

                            complexgather()


                        else:
                            fi = Files0[int(fi)]

                            dashID = ['Requests.txt', 'Requirements.txt', 'requests.txt', 'Requirements.txt']
                            try:
                                for dash in dashID:
                                    if dash in Files0:
                                        dash = f'{dir1}/{dash}'
                                        dash1 = f'python3 -m pip install -r {dash}'
                                        try:
                                            os.system(dash1)
                                            print('Requirements Installed')
                                        except:
                                            pass
                            except:
                                print('No Requirements found')

                            ch = '.'
                            # Remove all characters before the character '-' from string
                            listOfWords = fi.split(ch, 1)
                            if len(listOfWords) > 0:
                                ffi = listOfWords[1]

                            if ffi == 'py':
                                launch = f'&python3 {fi}'

                                tier = f'&python3 {dir1}/{fi}'
                                print('[!] CheckPoint 4|4 [!]')
                                print(launch)
                                Form = f'{ChangeDir}@{fi[:-3]} = {launch}'
                                import System.Drive.Errors_Events.EventMan as EV

                                EV.NewEvent(event=f'Launch Command Created: {Form}', Pol=0)
                                cwdd = User.UserProfile.SourceDirectory
                                f = open(f'{cwdd}System/Cache/System/GitHub/Int.txt', 'a')
                                f.write(f'\n{Form}')
                                f.close()
                                print('Installation Complete!')

                            elif ffi == 'c':
                                launch = f'&gcc {fi}'

                                print('[!] CheckPoint 4|4 [!]')
                                print(launch)
                                Form = f'{ChangeDir}@{fi[:-3]} = {launch}'
                                import System.Drive.Errors_Events.EventMan as EV

                                EV.NewEvent(event=f'Launch Command Created: {Form}', Pol=0)
                                cwdd = User.UserProfile.SourceDirectory
                                f = open(f'{cwdd}System/Cache/System/GitHub/Int.txt', 'a')
                                f.write(f'\n{Form}')
                                f.close()
                                print('Installation Complete!')

                            elif ffi == 'cpp':
                                launch = f'&g++ {fi}'

                                print('[!] CheckPoint 4|4 [!]')
                                print(launch)
                                Form = f'{ChangeDir}@{fi[:-3]} = {launch}'
                                import System.Drive.Errors_Events.EventMan as EV

                                EV.NewEvent(event=f'Launch Command Created: {Form}', Pol=0)
                                import User.UserProfile as UP
                                cwdd = UP.SourceDirectory
                                f = open(f'{cwdd}System/Cache/System/GitHub/Int.txt', 'a')
                                f.write(f'\n{Form}')
                                f.close()
                                print('Installation Complete!')

                            elif ffi == 'sh':
                                launch = f'&bash {fi}'

                                print('[!] CheckPoint 4|4 [!]')
                                print(launch)
                                Form = f'{ChangeDir}@{fi[:-3]} = {launch}'
                                import System.Drive.Errors_Events.EventMan as EV

                                EV.NewEvent(event=f'Launch Command Created: {Form}', Pol=0)
                                cwdd = User.UserProfile.SourceDirectory
                                f = open(f'{cwdd}System/Cache/System/GitHub/Int.txt', 'a')
                                f.write(f'\n'
love = ''
god = ''
destiny = ''
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))
